name: CI/CD

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: '17'

    - name: Build and Test Spring Boot Backend
      run: |
        chmod +x ./mvnw
        ./mvnw clean install
      id: build-backend

    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: Install dependencies and build React Frontend
      run: |
        cd frontend
        npm install
        npm run build

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

    - name: Build Docker Images
      run: docker-compose -f docker-compose.yml build
    
    - name: Save Docker Images as tar files
      run: |
        docker save -o backend.tar backend
        docker save -o frontend.tar frontend

    - name: Install SSH client
      run: sudo apt-get update && sudo apt-get install -y openssh-client

    - name: Add SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.EC2_KEYPAIR }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Connect to EC2 and create folder
      run: |
        ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-138-134-13.us-east-2.compute.amazonaws.com "rm -rf /home/ec2-user/success"

    - name: Upload Docker Images to EC2
      run: |
        scp -o StrictHostKeyChecking=no backend.tar ec2-user@ec2-3-138-134-13.us-east-2.compute.amazonaws.com:/home/ec2-user/
        scp -o StrictHostKeyChecking=no frontend.tar ec2-user@ec2-3-138-134-13.us-east-2.compute.amazonaws.com:/home/ec2-user/

    - name: Deploy to EC2
      run: |
          ssh -o StrictHostKeyChecking=no ec2-user@ec2-3-138-134-13.us-east-2.compute.amazonaws.com '
          docker load -i /home/ec2-user/backend.tar &&
          docker load -i /home/ec2-user/frontend.tar &&
          docker-compose -f /home/ec2-user/docker-compose.yml up --build -d'
